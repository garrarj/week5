.nav-links:hover{
    background-color: red;
}
.nav-links:active{
    background-color: green;
    padding: 15px 100px;
}

.form-fields:optional{
    border: 2px solid green;
}

.form-fields:optional:focus{
    background-color: rgba(0, 255, 0, 0.1);
}

.form-fields:required{
    border: 2px solid red;
}

.form-fields:required:focus{
    background-color: rgba(255, 0, 0, 0.1);
}

.form-container h3:hover::after{
    content:" RIGHT NOW!";
    color: purple;
}


/****************************************************************************************/
/* Shortcut in Visual Studio code for commenting code: CTRL+K+C (uncomment: CTRL+K+U) */

/*
The main difference between pseudo-classes and pseudo-elements is that pseudo-classes are used to affect EXISTING elements and pseudo-elements are used to CREATE new elements

**Pseudo-Classes - affect existing elements based on a condition**
Listed below is nearly complete list of all pseudo-classes. Some of the most common of which include 'hover', 'active', and 'focus'
    :hover  -- User has their cursor over an element but is not clicking
    :active  -- User is clicking on an elements
    :focus  -- User has entered into an interactive with an element (e.g. writing text into a form field)

    :optional
    :required

    :nth-child()
    :first-child
    :last-child

    :not()

    :link
    :checked
    :visited
    :valid
    :invalid
    :default
    :disabled
    :empty
    :in-range
    :lang( )
    :out-of-range
    :root
    :only-of-type
    :nth-of-type()
    :first-of-type
    :last-of-type

P**seudo-Elements - create content** 
Using a pseudo-element like 'before' or 'after' will allow you to add content that did not previously exist without the need to modify HTML
Listed below is a nearly complete list of pseudo-elements

    ::after
    ::before
    ::first-letter
    ::first-line
    ::selection
    ::cue (WebVTT)
*/